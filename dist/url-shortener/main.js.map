{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<!-- GitHub Corner from http://tholman.com/github-corners/-->\\n<a href=\\\"https://github.com/abvita/url-shortener-v2\\\" class=\\\"github-corner\\\" aria-label=\\\"View source on GitHub\\\"><svg\\n    width=\\\"80\\\" height=\\\"80\\\" viewBox=\\\"0 0 250 250\\\"\\n    style=\\\"fill:#151513; color:#fff; position: absolute; top: 0; border: 0; right: 0;\\\" aria-hidden=\\\"true\\\">\\n    <path d=\\\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\\\"></path>\\n    <path\\n      d=\\\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\\\"\\n      fill=\\\"currentColor\\\" style=\\\"transform-origin: 130px 106px;\\\" class=\\\"octo-arm\\\"></path>\\n    <path\\n      d=\\\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\\\"\\n      fill=\\\"currentColor\\\" class=\\\"octo-body\\\"></path>\\n  </svg>\\n</a>\\n\\n<div class=\\\"container\\\" [ngClass]=\\\"bgColor\\\">\\n  <h1>shrinkr</h1>\\n  <p>Shrink your long URLs to something shorter and easier to use and share.</p>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-8 col-md-offset-2\\\">\\n      <div class=\\\"input-group input-group-lg\\\">\\n        <input id=\\\"url-field\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Paste your link...\\\"\\n          [(ngModel)]=\\\"urlData.long\\\">\\n        <span class=\\\"input-group-btn\\\">\\n          <button (click)=\\\"shorten()\\\" class=\\\"btn btn-shorten btn-success\\\" type=\\\"button\\\" [disabled]=\\\"urlData.long.length === 0\\\">SHRINK</button>\\n        </span>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-3 col-md-offset-1\\\">\\n      <h3>New, tidy URL:</h3>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n        <h3><a id=\\\"shortlink\\\" href=\\\"{{urlData.short}}\\\" target=\\\"_blank\\\" *ngIf=\\\"urlData.short.length > 0\\\">{{urlData.short}}</a>&nbsp;&nbsp;<i *ngIf=\\\"urlData.short.length > 0\\\" class=\\\"fas fa-external-link-alt\\\"></i>\\n        </h3>\\n    </div>\\n  </div>\\n  <div class=\\\"row justify-content-center\\\" id=\\\"footer\\\">\\n    <div class=\\\"col\\\">\\n      <div>&copy; Alexa Vita</div>\\n    </div>\\n  </div>\\n</div>\"","import { Component } from '@angular/core';\nimport { Http } from '@angular/http'; \n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\n\nexport class AppComponent {\n\n  constructor(private http: Http) { }\n\n  urlData = {\n    long:'',\n    short:''\n  };\n\n  //background color scope variables\n  bgColor = '';\n  colCount = 0;\n  colorArr = ['oneBg', 'twoBg', 'threeBg', 'fourBg'];\n  currColor = '';\n\n  //URL shortening function\n  shorten(): any {\n    let formattedUrl = this.formatUrl(this.urlData.long);\n    let request = {url: formattedUrl};\n    this.http.post('/api/shorten', request).subscribe(\n            (response: any) => {\n              let resp = JSON.parse(response._body);\n              this.urlData.short = resp.shortUrl;\n          },\n          (error: any) => {\n            console.log(error);\n          });\n\n    //background color cycle script\n    this.colCount ++;\n      if (this.colCount < this.colorArr.length)\n      {\n          this.bgColor = this.colorArr[this.colCount];\n      } else {\n          this.colCount = 0;\n          this.bgColor = this.colorArr[this.colCount];\n      }\n  }\n\n  //formats provided URL\n  formatUrl(data: any): any {\n    if (data.toLowerCase().includes('http://') || data.toLowerCase().includes('https://')) {\n      return data;\n    } else {\n      let formattedData = 'http://' + data;\n      return formattedData;\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http'; \nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}