{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"container\\\" [ngClass]=\\\"bgColor\\\">\\n  <h1>URL Shortener</h1>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-8 col-md-offset-2 col-centered\\\">\\n      <div class=\\\"input-group input-group-lg\\\">\\n        <input id=\\\"url-field\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Paste your link...\\\" [(ngModel)]=\\\"urlData.long\\\">\\n        <span class=\\\"input-group-btn\\\">\\n          <button (click)=\\\"shorten()\\\" class=\\\"btn btn-shorten\\\" type=\\\"button\\\">SHORTEN</button>\\n        </span>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row orig\\\">\\n    <div class=\\\"col-md-3 col-md-offset-1\\\">\\n        <h3>Original URL:</h3>\\n    </div>\\n    <div class=\\\"col-md-5\\\">\\n      <h3>{{ urlData.long }}</h3>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-3 col-md-offset-1\\\">\\n        <h3>New, tidy URL:</h3>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n        <a id=\\\"shortlink\\\" href=\\\"{{urlData.short}}\\\" target=\\\"_blank\\\"><h3>{{ urlData.short }}  <i *ngIf=\\\"urlData.short.length > 0\\\" class=\\\"fas fa-external-link-alt\\\"></i></h3></a>\\n    </div>\\n  </div>\\n  <div class=\\\"row justify-content-center\\\" id=\\\"git\\\">\\n    <div class=\\\"col\\\">\\n      <a href=\\\"https://github.com/abvita/url-shortener\\\" target=\\\"_blank\\\"><i class=\\\"fab fa-github\\\"></i></a>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport {Http, Response, Headers, RequestOptions } from '@angular/http'; \n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\n\nexport class AppComponent {\n\n  constructor(private http: Http) { }\n\n  title = 'url-shortener';\n  urlData = {\n    long:'',\n    short:''\n  };\n  //background color scope variables\n  bgColor = '';\n  colCount = 0;\n  colorArr = ['oneBg', 'twoBg', 'threeBg', 'fourBg'];\n  currColor = '';\n\n  //URL shortening function\n  shorten(): any {\n    let formattedUrl = this.formatUrl(this.urlData.long);\n    let request = {url: formattedUrl};\n    this.http.post('/api/shorten', request).subscribe(\n            (response: any) => {\n              let resp = JSON.parse(response._body);\n              var resultHTML = '<a href=\"' + resp.shortUrl + '\">'\n                  + resp.shortUrl + '</a>';\n              this.urlData.short = resp.shortUrl;\n          },\n          (error: any) => {\n            console.log(error);\n          });\n\n    //background color cycle script\n    this.colCount ++;\n      if (this.colCount < this.colorArr.length)\n      {\n          this.bgColor = this.colorArr[this.colCount];\n      } else {\n          this.colCount = 0;\n          this.bgColor = this.colorArr[this.colCount];\n      }\n  }\n\n  formatUrl(data: any): any {\n    if (data.toLowerCase().includes('http://') || data.toLowerCase().includes('https://')) {\n      return data;\n    } else {\n      let formattedData = 'http://' + data;\n      return formattedData;\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http'; \nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}